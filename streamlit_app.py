import streamlit as st
from pymorphy2 import MorphAnalyzer

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
morph = MorphAnalyzer(lang='ru')

# –§—É–Ω–∫—Ü–∏—è –ª–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏–∏
def lemmatize(text):
    return [morph.parse(word)[0].normal_form for word in text.lower().split()]

# –î–∞–Ω–Ω—ã–µ
adaptation_plan = {
    1: "–î–µ–Ω—å 1: –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –±–∞–Ω–∫–æ–º –∏ –∫–æ–º–∞–Ω–¥–æ–π",
    2: "–î–µ–Ω—å 2: –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–≤",
    3: "–î–µ–Ω—å 3: –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –ü–°–ë"
}

faq = {
    "–¥–æ—Å—Ç—É–ø": "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ HelpDesk.",
    "–ø—Ä–æ–¥—É–∫—Ç": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π.",
    "–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å": "–û–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª."
}

reminders = {
    2: "–ó–∞–≤—Ç—Ä–∞ –≤ 10:00 —Ç—Ä–µ–Ω–∏–Ω–≥ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º –ü–°–ë",
    3: "–°–µ–≥–æ–¥–Ω—è –æ–±–µ–¥ —Å –∫–æ–º–∞–Ω–¥–æ–π –≤ 13:00"
}

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.set_page_config(page_title="–ï–≤–∞ ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ü–°–ë", page_icon="ü§ñ")
st.title("ü§ñ –ï–≤–∞ ‚Äî –í–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∞–¥–∞–ø—Ç–∞—Ü–∏–∏")

day = st.sidebar.number_input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ (1-3):", min_value=1, max_value=3, value=1)
st.sidebar.markdown("üìÖ –°–µ–≥–æ–¥–Ω—è: " + adaptation_plan.get(day, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"))
st.sidebar.markdown("üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: " + reminders.get(day, "–ù–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"))

# –í–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞
st.subheader("‚ùì –ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å")
user_input = st.text_input("–ù–∞–ø—Ä–∏–º–µ—Ä: –∫–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç—É–ø—ã?")
if user_input:
    lemmas = lemmatize(user_input)
    response = "–ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞. –û–±—Ä–∞—Ç–∏—Å—å –∫ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫—É."
    for lemma in lemmas:
        for keyword in faq:
            if keyword in lemma:
                response = faq[keyword]
                break
    st.info("–û—Ç–≤–µ—Ç: " + response)

# –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
st.subheader("üß† –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?")
mood = st.slider("–û—Ü–µ–Ω–∏ —Å–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç 1 (–ø–ª–æ—Ö–æ) –¥–æ 5 (–æ—Ç–ª–∏—á–Ω–æ)", 1, 5)
if mood <= 2:
    st.error("–í—ã –æ—Ç–º–µ—Ç–∏–ª–∏ –Ω–∏–∑–∫–æ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ. –°–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä—É.")
elif mood <= 3:
    st.warning("–ï—Å–ª–∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –¥–∞—ë—Ç—Å—è —Ç—Ä—É–¥–Ω–æ ‚Äî –æ–±—Å—É–¥–∏ —ç—Ç–æ —Å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º.")
else:
    st.success("–û—Ç–ª–∏—á–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!")
